<template>
  <div class="container" :class="{ 'sign-up-mode': signUpMode }">
    <!-- form表单容器 -->
    <div class="form-container">
      <div class="signin-signup">
        <!-- 登录 -->
        <el-form
          :model="loginUser"
          :rules="rules"
          ref="loginForm"
          label-width="100px"
          class="login-form sign-in-form"
        >
          <el-form-item label="邮箱" prop="email">
            <el-input v-model="loginUser.email" placeholder="Enter Email..." />
          </el-form-item>
          <el-form-item label="密码" prop="password">
            <el-input
              v-model="loginUser.password"
              type="password"
              placeholder="Enter Password..."
            />
          </el-form-item>
          <el-form-item>
            <el-button
              @click="handleLogin('loginForm')"
              type="primary"
              class="submit-btn"
              >提交</el-button
            >
          </el-form-item>
          <!-- 找回密码 -->
          <el-form-item>
            <p class="tiparea">忘记密码<a>立即找回</a></p>
          </el-form-item>
        </el-form>
        <!-- 注册 -->
        <!-- <h1>注册</h1> -->
      </div>
    </div>
    <!-- 左右切换动画 -->
    <div class="panels-container">
      <div class="panel left-panel">
        <div class="content">
          <h3>Row,row,row your boat</h3>
          <p>Gentlely down the stream</p>
          <button @click="signUpMode = !signUpMode" class="btn transparent">
            注册
          </button>
        </div>
        <!-- <img src="@/assets" alt=""> -->
      </div>
      <div class="panel right-panel">
        <div class="content">
          <h3>Merrily,merrily,merrily,merrily,</h3>
          <p>Life is but a dream</p>
          <button @click="signUpMode = !signUpMode" class="btn transparent">
            登录
          </button>
        </div>
        <!-- <img src="@/assets" alt=""> -->
      </div>
    </div>
  </div>
</template>

<script>
import { ref, reactive, getCurrentInstance } from 'vue'
export default {
  name: 'LoginRegister',
  components: {},
  // Vue3语法糖
  // Vue2是通过data和methods传递数据和方法
  // Vue3将data和methods直接耦合在了一起
  setup() {
    // 通过解构getCurrentInstance，获取this，这里的this就是ctx
    const { ctx } = getCurrentInstance()
    // 登录/注册模式
    const signUpMode = ref(false)
    // 登录表单
    const loginUser = reactive({
      email: '',
      password: ''
    })
    // 校验规则
    const rules = reactive({
      email: [
        {
          required: true,
          type: 'email',
          message: 'email格式错误',
          trigger: 'blur'
        }
      ],
      password: [
        { required: true, message: '密码不得为空', trigger: 'blur' },
        { min: 6, max: 30, message: '密码长度必须在6到30之间', trigger: 'blur' }
      ]
    })
    // 触发登录方法
    const handleLogin = (formName) => {
      console.log(ctx)
      ctx.$refs[formName].validate((valid) => {
        if (valid) {
          console.log('submit!')
        } else {
          console.log('error submit!')
          return false
        }
      })
    }
    return { signUpMode, loginUser, rules, handleLogin }
  }
}
</script>
